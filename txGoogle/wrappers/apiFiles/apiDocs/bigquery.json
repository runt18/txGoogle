{"protocol": "rest", "ownerName": "Google", "batchPath": "batch", "id": "bigquery:v2", "schemas": {"QueryRequest": {"type": "object", "id": "QueryRequest", "properties": {"timeoutMs": {"type": "integer", "description": "[Optional] How long to wait for the query to complete, in milliseconds, before the request times out and returns. Note that this is only a timeout for the request, not the query. If the query takes longer to run than the timeout value, the call returns without any results and with the 'jobComplete' flag set to false. You can call GetQueryResults() to wait for the query to complete and read the results. The default value is 10000 milliseconds (10 seconds).", "format": "uint32"}, "kind": {"default": "bigquery#queryRequest", "type": "string", "description": "The resource type of the request."}, "dryRun": {"type": "boolean", "description": "[Optional] If set, don't actually run the query. A valid query will return an empty response, while an invalid query will return the same error it would if it wasn't a dry run. The default value is false."}, "useQueryCache": {"type": "boolean", "description": "[Optional] Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. The default value is true."}, "defaultDataset": {"description": "[Optional] Specifies the default datasetId and projectId to assume for any unqualified table names in the query. If not set, all table names in the query string must be qualified in the format 'datasetId.tableId'.", "$ref": "DatasetReference"}, "maxResults": {"type": "integer", "description": "[Optional] The maximum number of rows of data to return per page of results. Setting this flag to a small value such as 1000 and then paging through results might improve reliability when the query result set is large. In addition to this limit, responses are also limited to 10 MB. By default, there is no maximum row count, and only the byte limit applies.", "format": "uint32"}, "query": {"type": "string", "description": "[Required] A query string, following the BigQuery query syntax, of the query to execute. Example: \"SELECT count(f1) FROM [myProjectId:myDatasetId.myTableId]\".", "annotations": {"required": ["bigquery.jobs.query"]}}, "preserveNulls": {"type": "boolean", "description": "[Deprecated] If set to false, maps null values in the query response to the column's default value. Only specify if you have older code that can not handle null values in the query response. The default value is true. This flag is deprecated and will be ignored in a future version of BigQuery."}}}, "JobStatistics2": {"type": "object", "id": "JobStatistics2", "properties": {"cacheHit": {"type": "boolean", "description": "[Output-only] Whether the query result was fetched from the query cache."}, "totalBytesProcessed": {"type": "string", "description": "[Output-only] Total bytes processed for this job.", "format": "int64"}}}, "JobStatistics3": {"type": "object", "id": "JobStatistics3", "properties": {"outputRows": {"type": "string", "description": "[Output-only] Number of rows imported in a load job. Note that while an import job is in the running state, this value may change.", "format": "int64"}, "inputFiles": {"type": "string", "description": "[Output-only] Number of source files in a load job.", "format": "int64"}, "inputFileBytes": {"type": "string", "description": "[Output-only] Number of bytes of source data in a joad job.", "format": "int64"}, "outputBytes": {"type": "string", "description": "[Output-only] Size of the loaded data in bytes. Note that while an import job is in the running state, this value may change.", "format": "int64"}}}, "JsonObject": {"additionalProperties": {"$ref": "JsonValue"}, "type": "object", "id": "JsonObject", "description": "Represents a single JSON object."}, "ProjectList": {"type": "object", "id": "ProjectList", "properties": {"nextPageToken": {"type": "string", "description": "A token to request the next page of results."}, "totalItems": {"type": "integer", "description": "The total number of projects in the list.", "format": "int32"}, "kind": {"default": "bigquery#projectList", "type": "string", "description": "The type of list."}, "etag": {"type": "string", "description": "A hash of the page of results"}, "projects": {"items": {"type": "object", "properties": {"friendlyName": {"type": "string", "description": "A descriptive name for this project."}, "kind": {"default": "bigquery#project", "type": "string", "description": "The resource type."}, "numericId": {"type": "string", "description": "The numeric ID of this project.", "format": "uint64"}, "id": {"type": "string", "description": "An opaque ID of this project."}, "projectReference": {"description": "A unique reference to this project.", "$ref": "ProjectReference"}}}, "type": "array", "description": "Projects to which you have at least READ access."}}}, "TableFieldSchema": {"type": "object", "id": "TableFieldSchema", "properties": {"fields": {"items": {"$ref": "TableFieldSchema"}, "type": "array", "description": "[Optional] Describes the nested schema fields if the type property is set to RECORD."}, "type": {"type": "string", "description": "[Required] The field data type. Possible values include STRING, INTEGER, FLOAT, BOOLEAN, TIMESTAMP or RECORD (where RECORD indicates that the field contains a nested schema)."}, "description": {"type": "string", "description": "[Optional] The field description."}, "name": {"type": "string", "description": "[Required] The field name."}, "mode": {"type": "string", "description": "[Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE."}}}, "JobConfigurationLoad": {"type": "object", "id": "JobConfigurationLoad", "properties": {"encoding": {"type": "string", "description": "[Optional] The character encoding of the data. The supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties."}, "fieldDelimiter": {"type": "string", "description": "[Optional] The separator for fields in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence \"\\t\" to specify a tab separator. The default value is a comma (',')."}, "sourceFormat": {"type": "string", "description": "[Optional] The format of the data files. For CSV files, specify \"CSV\". For datastore backups, specify \"DATASTORE_BACKUP\". For newline-delimited JSON, specify \"NEWLINE_DELIMITED_JSON\". The default value is CSV."}, "destinationTable": {"description": "[Required] The destination table to load the data into.", "$ref": "TableReference"}, "writeDisposition": {"type": "string", "description": "[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion."}, "maxBadRecords": {"type": "integer", "description": "[Optional] The maximum number of bad records that BigQuery can ignore when running the job. If the number of bad records exceeds this value, an 'invalid' error is returned in the job result and the job fails. The default value is 0, which requires that all records are valid.", "format": "int32"}, "allowJaggedRows": {"type": "boolean", "description": "[Optional] Accept rows that are missing trailing optional columns. The missing values are treated as nulls. Default is false which treats short rows as errors. Only applicable to CSV, ignored for other formats."}, "skipLeadingRows": {"type": "integer", "description": "[Optional] The number of rows at the top of a CSV file that BigQuery will skip when loading the data. The default value is 0. This property is useful if you have header rows in the file that should be skipped.", "format": "int32"}, "sourceUris": {"items": {"type": "string"}, "type": "array", "description": "[Required] The fully-qualified URIs that point to your data on Google Cloud Storage."}, "quote": {"type": "string", "description": "[Optional] The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote ('\"'). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true."}, "createDisposition": {"type": "string", "description": "[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a 'notFound' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion."}, "schemaInlineFormat": {"type": "string", "description": "[Deprecated] The format of the schemaInline property."}, "schemaInline": {"type": "string", "description": "[Deprecated] The inline schema. For CSV schemas, specify as \"Field1:Type1[,Field2:Type2]*\". For example, \"foo:STRING, bar:INTEGER, baz:FLOAT\"."}, "allowQuotedNewlines": {"type": "boolean", "description": "Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false."}, "ignoreUnknownValues": {"type": "boolean", "description": "[Optional] Accept rows that contain values that do not match the schema. The unknown values are ignored. Default is false which treats unknown values as errors. For CSV this ignores extra values at the end of a line. For JSON this ignores named values that do not match any column name."}, "schema": {"description": "[Optional] The schema for the destination table. The schema can be omitted if the destination table already exists or if the schema can be inferred from the loaded data.", "$ref": "TableSchema"}}}, "TableCell": {"properties": {"v": {"type": "any"}}, "type": "object", "id": "TableCell", "description": "Represents a single cell in the result set. Users of the java client can detect whether their value result is null by calling 'com.google.api.client.util.Data.isNull(cell.getV())'."}, "JobReference": {"type": "object", "id": "JobReference", "properties": {"projectId": {"type": "string", "description": "[Required] Project ID being billed for the job.", "annotations": {"required": ["bigquery.jobs.getQueryResults"]}}, "jobId": {"type": "string", "description": "[Required] ID of the job.", "annotations": {"required": ["bigquery.jobs.getQueryResults"]}}}}, "TableList": {"type": "object", "id": "TableList", "properties": {"nextPageToken": {"type": "string", "description": "A token to request the next page of results."}, "tables": {"items": {"type": "object", "properties": {"friendlyName": {"type": "string", "description": "The user-friendly name for this table."}, "kind": {"default": "bigquery#table", "type": "string", "description": "The resource type."}, "type": {"type": "string", "description": "The type of table. Possible values are: TABLE, VIEW."}, "id": {"type": "string", "description": "An opaque ID of the table"}, "tableReference": {"description": "A reference uniquely identifying the table.", "$ref": "TableReference"}}}, "type": "array", "description": "Tables in the requested dataset."}, "kind": {"default": "bigquery#tableList", "type": "string", "description": "The type of list."}, "etag": {"type": "string", "description": "A hash of this page of results."}, "totalItems": {"type": "integer", "description": "The total number of tables in the dataset.", "format": "int32"}}}, "ProjectReference": {"type": "object", "id": "ProjectReference", "properties": {"projectId": {"type": "string", "description": "[Required] ID of the project. Can be either the numeric ID or the assigned ID of the project."}}}, "TableDataList": {"type": "object", "id": "TableDataList", "properties": {"pageToken": {"type": "string", "description": "A token used for paging results. Providing this token instead of the startIndex parameter can help you retrieve stable results when an underlying table is changing."}, "kind": {"default": "bigquery#tableDataList", "type": "string", "description": "The resource type of the response."}, "etag": {"type": "string", "description": "A hash of this page of results."}, "rows": {"items": {"$ref": "TableRow"}, "type": "array", "description": "Rows of results."}, "totalRows": {"type": "string", "description": "The total number of rows in the complete table.", "format": "int64"}}}, "Job": {"type": "object", "id": "Job", "properties": {"status": {"description": "[Output-only] The status of this job. Examine this value when polling an asynchronous job to see if the job is complete.", "$ref": "JobStatus"}, "kind": {"default": "bigquery#job", "type": "string", "description": "[Output-only] The type of the resource."}, "statistics": {"description": "[Output-only] Information about the job, including starting time and ending time of the job.", "$ref": "JobStatistics"}, "jobReference": {"description": "[Optional] Reference describing the unique-per-user name of the job.", "$ref": "JobReference"}, "etag": {"type": "string", "description": "[Output-only] A hash of this resource."}, "configuration": {"description": "[Required] Describes the job configuration.", "$ref": "JobConfiguration"}, "id": {"type": "string", "description": "[Output-only] Opaque ID field of the job"}, "selfLink": {"type": "string", "description": "[Output-only] A URL that can be used to access this resource again."}}}, "TableDataInsertAllResponse": {"type": "object", "id": "TableDataInsertAllResponse", "properties": {"kind": {"default": "bigquery#tableDataInsertAllResponse", "type": "string", "description": "The resource type of the response."}, "insertErrors": {"items": {"type": "object", "properties": {"index": {"type": "integer", "description": "The index of the row that error applies to.", "format": "uint32"}, "errors": {"items": {"$ref": "ErrorProto"}, "type": "array", "description": "Error information for the row indicated by the index property."}}}, "type": "array", "description": "An array of errors for rows that were not inserted."}}}, "JobConfigurationTableCopy": {"type": "object", "id": "JobConfigurationTableCopy", "properties": {"createDisposition": {"type": "string", "description": "[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a 'notFound' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion."}, "sourceTables": {"items": {"$ref": "TableReference"}, "type": "array", "description": "[Pick one] Source tables to copy."}, "writeDisposition": {"type": "string", "description": "[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion."}, "destinationTable": {"description": "[Required] The destination table", "$ref": "TableReference"}, "sourceTable": {"description": "[Pick one] Source table to copy.", "$ref": "TableReference"}}}, "JobList": {"type": "object", "id": "JobList", "properties": {"nextPageToken": {"type": "string", "description": "A token to request the next page of results."}, "totalItems": {"type": "integer", "description": "Total number of jobs in this collection.", "format": "int32"}, "kind": {"default": "bigquery#jobList", "type": "string", "description": "The resource type of the response."}, "etag": {"type": "string", "description": "A hash of this page of results."}, "jobs": {"items": {"type": "object", "properties": {"status": {"description": "[Full-projection-only] Describes the state of the job.", "$ref": "JobStatus"}, "kind": {"default": "bigquery#job", "type": "string", "description": "The resource type."}, "statistics": {"description": "[Output-only] Information about the job, including starting time and ending time of the job.", "$ref": "JobStatistics"}, "jobReference": {"description": "Job reference uniquely identifying the job.", "$ref": "JobReference"}, "state": {"type": "string", "description": "Running state of the job. When the state is DONE, errorResult can be checked to determine whether the job succeeded or failed."}, "user_email": {"type": "string", "description": "[Full-projection-only] User who ran the job."}, "configuration": {"description": "[Full-projection-only] Specifies the job configuration.", "$ref": "JobConfiguration"}, "id": {"type": "string", "description": "Unique opaque ID of the job."}, "errorResult": {"description": "A result object that will be present only if the job has failed.", "$ref": "ErrorProto"}}}, "type": "array", "description": "List of jobs that were requested."}}}, "JobConfigurationExtract": {"type": "object", "id": "JobConfigurationExtract", "properties": {"destinationUri": {"type": "string", "description": "[Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written."}, "compression": {"type": "string", "description": "[Optional] The compression type to use for exported files. Possible values include GZIP and NONE. The default value is NONE."}, "fieldDelimiter": {"type": "string", "description": "[Optional] Delimiter to use between fields in the exported data. Default is ','"}, "destinationFormat": {"type": "string", "description": "[Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON and AVRO. The default value is CSV. Tables with nested or repeated fields cannot be exported as CSV."}, "printHeader": {"type": "boolean", "description": "[Optional] Whether to print out a header row in the results. Default is true."}, "destinationUris": {"items": {"type": "string"}, "type": "array", "description": "[Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written."}, "sourceTable": {"description": "[Required] A reference to the table being exported.", "$ref": "TableReference"}}}, "GetQueryResultsResponse": {"type": "object", "id": "GetQueryResultsResponse", "properties": {"kind": {"default": "bigquery#getQueryResultsResponse", "type": "string", "description": "The resource type of the response."}, "rows": {"items": {"$ref": "TableRow"}, "type": "array", "description": "An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above. Present only when the query completes successfully."}, "jobReference": {"description": "Reference to the BigQuery Job that was created to run the query. This field will be present even if the original request timed out, in which case GetQueryResults can be used to read the results once the query has completed. Since this API only returns the first page of results, subsequent pages can be fetched via the same mechanism (GetQueryResults).", "$ref": "JobReference"}, "pageToken": {"type": "string", "description": "A token used for paging results."}, "jobComplete": {"type": "boolean", "description": "Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available."}, "totalRows": {"type": "string", "description": "The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results. Present only when the query completes successfully.", "format": "uint64"}, "cacheHit": {"type": "boolean", "description": "Whether the query result was fetched from the query cache."}, "etag": {"type": "string", "description": "A hash of this response."}, "schema": {"description": "The schema of the results. Present only when the query completes successfully.", "$ref": "TableSchema"}}}, "TableReference": {"type": "object", "id": "TableReference", "properties": {"projectId": {"type": "string", "description": "[Required] ID of the project billed for storage of the table.", "annotations": {"required": ["bigquery.tables.update"]}}, "tableId": {"type": "string", "description": "[Required] ID of the table.", "annotations": {"required": ["bigquery.tables.update"]}}, "datasetId": {"type": "string", "description": "[Required] ID of the dataset containing the table.", "annotations": {"required": ["bigquery.tables.update"]}}}}, "ErrorProto": {"type": "object", "id": "ErrorProto", "properties": {"debugInfo": {"type": "string", "description": "Debugging information. This property is internal to Google and should not be used."}, "message": {"type": "string", "description": "A human-readable description of the error."}, "reason": {"type": "string", "description": "A short error code that summarizes the error."}, "location": {"type": "string", "description": "Specifies where the error occurred, if present."}}}, "JobConfigurationLink": {"type": "object", "id": "JobConfigurationLink", "properties": {"createDisposition": {"type": "string", "description": "[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a 'notFound' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion."}, "writeDisposition": {"type": "string", "description": "[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion."}, "destinationTable": {"description": "[Required] The destination table of the link job.", "$ref": "TableReference"}, "sourceUri": {"items": {"type": "string"}, "type": "array", "description": "[Required] URI of source table to link."}}}, "ViewDefinition": {"type": "object", "id": "ViewDefinition", "properties": {"query": {"type": "string", "description": "[Required] A query that BigQuery executes when the view is referenced."}}}, "JobStatus": {"type": "object", "id": "JobStatus", "properties": {"state": {"type": "string", "description": "[Output-only] Running state of the job."}, "errors": {"items": {"$ref": "ErrorProto"}, "type": "array", "description": "[Output-only] All errors encountered during the running of the job. Errors here do not necessarily mean that the job has completed or was unsuccessful."}, "errorResult": {"description": "[Output-only] Final error result of the job. If present, indicates that the job has completed and was unsuccessful.", "$ref": "ErrorProto"}}}, "TableSchema": {"type": "object", "id": "TableSchema", "properties": {"fields": {"items": {"$ref": "TableFieldSchema"}, "type": "array", "description": "Describes the fields in a table."}}}, "JsonValue": {"type": "any", "id": "JsonValue"}, "TableDataInsertAllRequest": {"type": "object", "id": "TableDataInsertAllRequest", "properties": {"kind": {"default": "bigquery#tableDataInsertAllRequest", "type": "string", "description": "The resource type of the response."}, "rows": {"items": {"type": "object", "properties": {"insertId": {"type": "string", "description": "[Optional] A unique ID for each row. BigQuery uses this property to detect duplicate insertion requests on a best-effort basis."}, "json": {"description": "[Required] A JSON object that contains a row of data. The object's properties and values must match the destination table's schema.", "$ref": "JsonObject"}}}, "type": "array", "description": "The rows to insert."}}}, "JobStatistics": {"type": "object", "id": "JobStatistics", "properties": {"load": {"description": "[Output-only] Statistics for a load job.", "$ref": "JobStatistics3"}, "creationTime": {"type": "string", "description": "[Output-only] Creation time of this job, in milliseconds since the epoch. This field will be present on all jobs.", "format": "int64"}, "totalBytesProcessed": {"type": "string", "description": "[Output-only] [Deprecated] Use the bytes processed in the query statistics instead.", "format": "int64"}, "startTime": {"type": "string", "description": "[Output-only] Start time of this job, in milliseconds since the epoch. This field will be present when the job transitions from the PENDING state to either RUNNING or DONE.", "format": "int64"}, "query": {"description": "[Output-only] Statistics for a query job.", "$ref": "JobStatistics2"}, "endTime": {"type": "string", "description": "[Output-only] End time of this job, in milliseconds since the epoch. This field will be present whenever a job is in the DONE state.", "format": "int64"}}}, "JobConfigurationQuery": {"type": "object", "id": "JobConfigurationQuery", "properties": {"flattenResults": {"type": "boolean", "description": "[Experimental] Flattens all nested and repeated fields in the query results. The default value is true. allowLargeResults must be true if this is set to false."}, "useQueryCache": {"type": "boolean", "description": "[Optional] Whether to look for the result in the query cache. The query cache is a best-effort cache that will be flushed whenever tables in the query are modified. Moreover, the query cache is only available when a query does not have a destination table specified."}, "defaultDataset": {"description": "[Optional] Specifies the default dataset to use for unqualified table names in the query.", "$ref": "DatasetReference"}, "destinationTable": {"description": "[Optional] Describes the table where the query results should be stored. If not present, a new table will be created to store the results.", "$ref": "TableReference"}, "priority": {"type": "string", "description": "[Optional] Specifies a priority for the query. Possible values include INTERACTIVE and BATCH. The default value is INTERACTIVE."}, "writeDisposition": {"type": "string", "description": "[Optional] Specifies the action that occurs if the destination table already exists. The following values are supported: WRITE_TRUNCATE: If the table already exists, BigQuery overwrites the table data. WRITE_APPEND: If the table already exists, BigQuery appends the data to the table. WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Creation, truncation and append actions occur as one atomic update upon job completion."}, "allowLargeResults": {"type": "boolean", "description": "If true, allows the query to produce arbitrarily large result tables at a slight cost in performance. Requires destinationTable to be set."}, "createDisposition": {"type": "string", "description": "[Optional] Specifies whether the job is allowed to create new tables. The following values are supported: CREATE_IF_NEEDED: If the table does not exist, BigQuery creates the table. CREATE_NEVER: The table must already exist. If it does not, a 'notFound' error is returned in the job result. The default value is CREATE_IF_NEEDED. Creation, truncation and append actions occur as one atomic update upon job completion."}, "query": {"type": "string", "description": "[Required] BigQuery SQL query to execute."}, "preserveNulls": {"type": "boolean", "description": "[Deprecated] This property is deprecated."}}}, "DatasetReference": {"type": "object", "id": "DatasetReference", "properties": {"projectId": {"type": "string", "description": "[Optional] The ID of the container project.", "annotations": {"required": ["bigquery.datasets.update"]}}, "datasetId": {"type": "string", "description": "[Required] A unique ID for this dataset, without the project name.", "annotations": {"required": ["bigquery.datasets.update"]}}}}, "TableRow": {"properties": {"f": {"items": {"$ref": "TableCell"}, "type": "array"}}, "type": "object", "id": "TableRow", "description": "Represents a single row in the result set, consisting of one or more fields."}, "JobConfiguration": {"type": "object", "id": "JobConfiguration", "properties": {"load": {"description": "[Pick one] Configures a load job.", "$ref": "JobConfigurationLoad"}, "dryRun": {"type": "boolean", "description": "[Optional] If set, don't actually run this job. A valid query will return a mostly empty response with some processing statistics, while an invalid query will return the same error it would if it wasn't a dry run. Behavior of non-query jobs is undefined."}, "link": {"description": "[Pick one] Configures a link job.", "$ref": "JobConfigurationLink"}, "query": {"description": "[Pick one] Configures a query job.", "$ref": "JobConfigurationQuery"}, "copy": {"description": "[Pick one] Copies a table.", "$ref": "JobConfigurationTableCopy"}, "extract": {"description": "[Pick one] Configures an extract job.", "$ref": "JobConfigurationExtract"}}}, "Dataset": {"type": "object", "id": "Dataset", "properties": {"kind": {"default": "bigquery#dataset", "type": "string", "description": "[Output-only] The resource type."}, "description": {"type": "string", "description": "[Optional] A user-friendly description of the dataset."}, "datasetReference": {"description": "[Required] A reference that identifies the dataset.", "$ref": "DatasetReference"}, "creationTime": {"type": "string", "description": "[Output-only] The time when this dataset was created, in milliseconds since the epoch.", "format": "int64"}, "access": {"items": {"type": "object", "properties": {"specialGroup": {"type": "string", "description": "[Pick one] A special group to grant access to. Possible values include: projectOwners: Owners of the enclosing project. projectReaders: Readers of the enclosing project. projectWriters: Writers of the enclosing project. allAuthenticatedUsers: All authenticated BigQuery users."}, "domain": {"type": "string", "description": "[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: \"example.com\"."}, "role": {"type": "string", "description": "[Required] Describes the rights granted to the user specified by the other member of the access object. The following string values are supported: READER, WRITER, OWNER."}, "groupByEmail": {"type": "string", "description": "[Pick one] An email address of a Google Group to grant access to."}, "userByEmail": {"type": "string", "description": "[Pick one] An email address of a user to grant access to. For example: fred@example.com."}}}, "type": "array", "description": "[Optional] An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER;"}, "etag": {"type": "string", "description": "[Output-only] A hash of the resource."}, "friendlyName": {"type": "string", "description": "[Optional] A descriptive name for the dataset."}, "lastModifiedTime": {"type": "string", "description": "[Output-only] The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.", "format": "int64"}, "id": {"type": "string", "description": "[Output-only] The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field."}, "selfLink": {"type": "string", "description": "[Output-only] A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource."}}}, "Table": {"type": "object", "id": "Table", "properties": {"kind": {"default": "bigquery#table", "type": "string", "description": "[Output-only] The type of the resource."}, "lastModifiedTime": {"type": "string", "description": "[Output-only] The time when this table was last modified, in milliseconds since the epoch.", "format": "int64"}, "description": {"type": "string", "description": "[Optional] A user-friendly description of this table."}, "creationTime": {"type": "string", "description": "[Output-only] The time when this table was created, in milliseconds since the epoch.", "format": "int64"}, "tableReference": {"description": "[Required] Reference describing the ID of this table.", "$ref": "TableReference"}, "numRows": {"type": "string", "description": "[Output-only] The number of rows of data in this table.", "format": "uint64"}, "numBytes": {"type": "string", "description": "[Output-only] The size of the table in bytes.", "format": "int64"}, "etag": {"type": "string", "description": "[Output-only] A hash of this resource."}, "friendlyName": {"type": "string", "description": "[Optional] A descriptive name for this table."}, "expirationTime": {"type": "string", "description": "[Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.", "format": "int64"}, "view": {"description": "[Optional] The view definition.", "$ref": "ViewDefinition"}, "type": {"type": "string", "description": "[Output-only] Describes the table type. The following values are supported: TABLE: A normal BigQuery table. VIEW: A virtual table defined by a SQL query. The default value is TABLE."}, "id": {"type": "string", "description": "[Output-only] An opaque ID uniquely identifying the table."}, "selfLink": {"type": "string", "description": "[Output-only] A URL that can be used to access this resource again."}, "schema": {"description": "[Optional] Describes the schema of this table.", "$ref": "TableSchema"}}}, "DatasetList": {"type": "object", "id": "DatasetList", "properties": {"nextPageToken": {"type": "string", "description": "A token that can be used to request the next results page. This property is omitted on the final results page."}, "kind": {"default": "bigquery#datasetList", "type": "string", "description": "The list type. This property always returns the value \"bigquery#datasetList\"."}, "datasets": {"items": {"type": "object", "properties": {"friendlyName": {"type": "string", "description": "A descriptive name for the dataset, if one exists."}, "kind": {"default": "bigquery#dataset", "type": "string", "description": "The resource type. This property always returns the value \"bigquery#dataset\"."}, "id": {"type": "string", "description": "The fully-qualified, unique, opaque ID of the dataset."}, "datasetReference": {"description": "The dataset reference. Use this property to access specific parts of the dataset's ID, such as project ID or dataset ID.", "$ref": "DatasetReference"}}}, "type": "array", "description": "An array of the dataset resources in the project. Each resource contains basic information. For full information about a particular dataset resource, use the Datasets: get method. This property is omitted when there are no datasets in the project."}, "etag": {"type": "string", "description": "A hash value of the results page. You can use this property to determine if the page has changed since the last request."}}}, "QueryResponse": {"type": "object", "id": "QueryResponse", "properties": {"kind": {"default": "bigquery#queryResponse", "type": "string", "description": "The resource type."}, "rows": {"items": {"$ref": "TableRow"}, "type": "array", "description": "An object with as many results as can be contained within the maximum permitted reply size. To get any additional rows, you can call GetQueryResults and specify the jobReference returned above."}, "jobReference": {"description": "Reference to the Job that was created to run the query. This field will be present even if the original request timed out, in which case GetQueryResults can be used to read the results once the query has completed. Since this API only returns the first page of results, subsequent pages can be fetched via the same mechanism (GetQueryResults).", "$ref": "JobReference"}, "pageToken": {"type": "string", "description": "A token used for paging results."}, "jobComplete": {"type": "boolean", "description": "Whether the query has completed or not. If rows or totalRows are present, this will always be true. If this is false, totalRows will not be available."}, "totalRows": {"type": "string", "description": "The total number of rows in the complete query result set, which can be more than the number of rows in this single page of results.", "format": "uint64"}, "totalBytesProcessed": {"type": "string", "description": "The total number of bytes processed for this query. If this query was a dry run, this is the number of bytes that would be processed if the query were run.", "format": "int64"}, "cacheHit": {"type": "boolean", "description": "Whether the query result was fetched from the query cache."}, "schema": {"description": "The schema of the results. Present only when the query completes successfully.", "$ref": "TableSchema"}}}}, "ownerDomain": "google.com", "rootUrl": "https://www.googleapis.com/", "parameters": {"prettyPrint": {"default": "true", "type": "boolean", "description": "Returns response with indentations and line breaks.", "location": "query"}, "fields": {"type": "string", "description": "Selector specifying which fields to include in a partial response.", "location": "query"}, "quotaUser": {"type": "string", "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.", "location": "query"}, "oauth_token": {"type": "string", "description": "OAuth 2.0 token for the current user.", "location": "query"}, "key": {"type": "string", "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location": "query"}, "userIp": {"type": "string", "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.", "location": "query"}, "alt": {"description": "Data format for the response.", "default": "json", "enum": ["csv", "json"], "enumDescriptions": ["Responses with Content-Type of text/csv", "Responses with Content-Type of application/json"], "location": "query", "type": "string"}}, "title": "BigQuery API", "baseUrl": "https://www.googleapis.com/bigquery/v2/", "version": "v2", "servicePath": "bigquery/v2/", "resources": {"tables": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Creates a new, empty table in the dataset.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the new table", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the new table", "location": "path"}}, "request": {"$ref": "Table"}, "response": {"$ref": "Table"}, "httpMethod": "POST", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}/tables", "id": "bigquery.tables.insert"}, "get": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Gets the specified table resource by table ID. This method does not return the data in the table, it only returns the table resource, which describes the structure of this table.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the requested table", "location": "path"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the requested table", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the requested table", "location": "path"}}, "response": {"$ref": "Table"}, "httpMethod": "GET", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", "id": "bigquery.tables.get"}, "list": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Lists all tables in the specified dataset.", "parameters": {"pageToken": {"type": "string", "description": "Page token, returned by a previous call, to request the next page of results", "location": "query"}, "maxResults": {"location": "query", "type": "integer", "description": "Maximum number of results to return", "format": "uint32"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the tables to list", "location": "path"}, "projectId": {"required": true, "type": "string", "description": "Project ID of the tables to list", "location": "path"}}, "response": {"$ref": "TableList"}, "httpMethod": "GET", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}/tables", "id": "bigquery.tables.list"}, "update": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the table to update", "location": "path"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the table to update", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the table to update", "location": "path"}}, "request": {"$ref": "Table"}, "response": {"$ref": "Table"}, "httpMethod": "PUT", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", "id": "bigquery.tables.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Updates information in an existing table. The update method replaces the entire table resource, whereas the patch method only replaces fields that are provided in the submitted table resource. This method supports patch semantics.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the table to update", "location": "path"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the table to update", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the table to update", "location": "path"}}, "request": {"$ref": "Table"}, "response": {"$ref": "Table"}, "httpMethod": "PATCH", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", "id": "bigquery.tables.patch"}, "delete": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Deletes the table specified by tableId from the dataset. If the table contains data, all the data will be deleted.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the table to delete", "location": "path"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the table to delete", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the table to delete", "location": "path"}}, "httpMethod": "DELETE", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}", "id": "bigquery.tables.delete"}}}, "datasets": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Creates a new empty dataset.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the new dataset", "location": "path"}}, "request": {"$ref": "Dataset"}, "response": {"$ref": "Dataset"}, "httpMethod": "POST", "parameterOrder": ["projectId"], "path": "projects/{projectId}/datasets", "id": "bigquery.datasets.insert"}, "get": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Returns the dataset specified by datasetID.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the requested dataset", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the requested dataset", "location": "path"}}, "response": {"$ref": "Dataset"}, "httpMethod": "GET", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}", "id": "bigquery.datasets.get"}, "list": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Lists all the datasets in the specified project to which the caller has read access; however, a project owner can list (but not necessarily get) all datasets in his project.", "parameters": {"pageToken": {"type": "string", "description": "Page token, returned by a previous call, to request the next page of results", "location": "query"}, "all": {"type": "boolean", "description": "Whether to list all datasets, including hidden ones", "location": "query"}, "maxResults": {"location": "query", "type": "integer", "description": "The maximum number of results to return", "format": "uint32"}, "projectId": {"required": true, "type": "string", "description": "Project ID of the datasets to be listed", "location": "path"}}, "response": {"$ref": "DatasetList"}, "httpMethod": "GET", "parameterOrder": ["projectId"], "path": "projects/{projectId}/datasets", "id": "bigquery.datasets.list"}, "update": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the dataset being updated", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the dataset being updated", "location": "path"}}, "request": {"$ref": "Dataset"}, "response": {"$ref": "Dataset"}, "httpMethod": "PUT", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}", "id": "bigquery.datasets.update"}, "patch": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Updates information in an existing dataset. The update method replaces the entire dataset resource, whereas the patch method only replaces fields that are provided in the submitted dataset resource. This method supports patch semantics.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the dataset being updated", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the dataset being updated", "location": "path"}}, "request": {"$ref": "Dataset"}, "response": {"$ref": "Dataset"}, "httpMethod": "PATCH", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}", "id": "bigquery.datasets.patch"}, "delete": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Deletes the dataset specified by the datasetId value. Before you can delete a dataset, you must delete all its tables, either manually or by specifying deleteContents. Immediately after deletion, you can create another dataset with the same name.", "parameters": {"deleteContents": {"type": "boolean", "description": "If True, delete all the tables in the dataset. If False and the dataset contains tables, the request will fail. Default is False", "location": "query"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of dataset being deleted", "location": "path"}, "projectId": {"required": true, "type": "string", "description": "Project ID of the dataset being deleted", "location": "path"}}, "httpMethod": "DELETE", "parameterOrder": ["projectId", "datasetId"], "path": "projects/{projectId}/datasets/{datasetId}", "id": "bigquery.datasets.delete"}}}, "jobs": {"methods": {"insert": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform", "https://www.googleapis.com/auth/devstorage.full_control", "https://www.googleapis.com/auth/devstorage.read_only", "https://www.googleapis.com/auth/devstorage.read_write"], "description": "Starts a new asynchronous job.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the project that will be billed for the job", "location": "path"}}, "supportsMediaUpload": true, "mediaUpload": {"protocols": {"simple": {"path": "/upload/bigquery/v2/projects/{projectId}/jobs", "multipart": true}, "resumable": {"path": "/resumable/upload/bigquery/v2/projects/{projectId}/jobs", "multipart": true}}, "accept": ["*/*"]}, "request": {"$ref": "Job"}, "response": {"$ref": "Job"}, "httpMethod": "POST", "parameterOrder": ["projectId"], "path": "projects/{projectId}/jobs", "id": "bigquery.jobs.insert"}, "query": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Runs a BigQuery SQL query synchronously and returns query results if the query completes within a specified timeout.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the project billed for the query", "location": "path"}}, "request": {"$ref": "QueryRequest"}, "response": {"$ref": "QueryResponse"}, "httpMethod": "POST", "parameterOrder": ["projectId"], "path": "projects/{projectId}/queries", "id": "bigquery.jobs.query"}, "list": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Lists all the Jobs in the specified project that were started by the user.", "parameters": {"projection": {"enumDescriptions": ["Includes all job data", "Does not include the job configuration"], "enum": ["full", "minimal"], "type": "string", "description": "Restrict information returned to a set of selected fields", "location": "query"}, "stateFilter": {"description": "Filter for job state", "enum": ["done", "pending", "running"], "repeated": true, "enumDescriptions": ["Finished jobs", "Pending jobs", "Running jobs"], "location": "query", "type": "string"}, "projectId": {"required": true, "type": "string", "description": "Project ID of the jobs to list", "location": "path"}, "allUsers": {"type": "boolean", "description": "Whether to display jobs owned by all users in the project. Default false", "location": "query"}, "maxResults": {"location": "query", "type": "integer", "description": "Maximum number of results to return", "format": "uint32"}, "pageToken": {"type": "string", "description": "Page token, returned by a previous call, to request the next page of results", "location": "query"}}, "response": {"$ref": "JobList"}, "httpMethod": "GET", "parameterOrder": ["projectId"], "path": "projects/{projectId}/jobs", "id": "bigquery.jobs.list"}, "getQueryResults": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Retrieves the results of a query job.", "parameters": {"timeoutMs": {"location": "query", "type": "integer", "description": "How long to wait for the query to complete, in milliseconds, before returning. Default is to return immediately. If the timeout passes before the job completes, the request will fail with a TIMEOUT error", "format": "uint32"}, "projectId": {"required": true, "type": "string", "description": "Project ID of the query job", "location": "path"}, "maxResults": {"location": "query", "type": "integer", "description": "Maximum number of results to read", "format": "uint32"}, "jobId": {"required": true, "type": "string", "description": "Job ID of the query job", "location": "path"}, "pageToken": {"type": "string", "description": "Page token, returned by a previous call, to request the next page of results", "location": "query"}, "startIndex": {"location": "query", "type": "string", "description": "Zero-based index of the starting row", "format": "uint64"}}, "response": {"$ref": "GetQueryResultsResponse"}, "httpMethod": "GET", "parameterOrder": ["projectId", "jobId"], "path": "projects/{projectId}/queries/{jobId}", "id": "bigquery.jobs.getQueryResults"}, "get": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Retrieves the specified job by ID.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the requested job", "location": "path"}, "jobId": {"required": true, "type": "string", "description": "Job ID of the requested job", "location": "path"}}, "response": {"$ref": "Job"}, "httpMethod": "GET", "parameterOrder": ["projectId", "jobId"], "path": "projects/{projectId}/jobs/{jobId}", "id": "bigquery.jobs.get"}}}, "tabledata": {"methods": {"list": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Retrieves table data from a specified set of rows.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the table to read", "location": "path"}, "maxResults": {"location": "query", "type": "integer", "description": "Maximum number of results to return", "format": "uint32"}, "pageToken": {"type": "string", "description": "Page token, returned by a previous call, identifying the result set", "location": "query"}, "startIndex": {"location": "query", "type": "string", "description": "Zero-based index of the starting row to read", "format": "uint64"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the table to read", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the table to read", "location": "path"}}, "response": {"$ref": "TableDataList"}, "httpMethod": "GET", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/data", "id": "bigquery.tabledata.list"}, "insertAll": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/bigquery.insertdata", "https://www.googleapis.com/auth/cloud-platform"], "description": "Streams data into BigQuery one record at a time without needing to run a load job.", "parameters": {"projectId": {"required": true, "type": "string", "description": "Project ID of the destination table.", "location": "path"}, "tableId": {"required": true, "type": "string", "description": "Table ID of the destination table.", "location": "path"}, "datasetId": {"required": true, "type": "string", "description": "Dataset ID of the destination table.", "location": "path"}}, "request": {"$ref": "TableDataInsertAllRequest"}, "response": {"$ref": "TableDataInsertAllResponse"}, "httpMethod": "POST", "parameterOrder": ["projectId", "datasetId", "tableId"], "path": "projects/{projectId}/datasets/{datasetId}/tables/{tableId}/insertAll", "id": "bigquery.tabledata.insertAll"}}}, "projects": {"methods": {"list": {"scopes": ["https://www.googleapis.com/auth/bigquery", "https://www.googleapis.com/auth/cloud-platform"], "description": "Lists the projects to which you have at least read access.", "parameters": {"pageToken": {"type": "string", "description": "Page token, returned by a previous call, to request the next page of results", "location": "query"}, "maxResults": {"location": "query", "type": "integer", "description": "Maximum number of results to return", "format": "uint32"}}, "id": "bigquery.projects.list", "httpMethod": "GET", "path": "projects", "response": {"$ref": "ProjectList"}}}}}, "revision": "20140808", "description": "A data platform for customers to create, manage, share and query data.", "auth": {"oauth2": {"scopes": {"https://www.googleapis.com/auth/devstorage.full_control": {"description": "Manage your data and permissions in Google Cloud Storage"}, "https://www.googleapis.com/auth/devstorage.read_only": {"description": "View your data in Google Cloud Storage"}, "https://www.googleapis.com/auth/devstorage.read_write": {"description": "Manage your data in Google Cloud Storage"}, "https://www.googleapis.com/auth/cloud-platform": {"description": "View and manage your data across Google Cloud Platform services"}, "https://www.googleapis.com/auth/bigquery.insertdata": {"description": "Insert data into Google BigQuery"}, "https://www.googleapis.com/auth/bigquery": {"description": "View and manage your data in Google BigQuery"}}}}, "kind": "discovery#restDescription", "name": "bigquery", "etag": "\"FrPV2U6xXFUq8eRv_PO3IoAURkc/Naei1N35n6IisOZs1QqGp-c-62k\"", "basePath": "/bigquery/v2/", "icons": {"x32": "http://www.google.com/images/icons/product/search-32.gif", "x16": "http://www.google.com/images/icons/product/search-16.gif"}, "discoveryVersion": "v1", "documentationLink": "https://developers.google.com/bigquery/docs/overview"}